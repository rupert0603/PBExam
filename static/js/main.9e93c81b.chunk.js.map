{"version":3,"sources":["components/NewOrderForm.js","components/Result.js","components/Navbar.js","components/ToppingsStats.js","App.js","reportWebVitals.js","index.js"],"names":["parseString","require","NewOrderForm","state","order","textareaChangeListener","e","setState","target","value","convertToXml","orderInPML","replace","convertToJSON","orderInXML","orderInJSON","err","result","sendOrderAndDisplayResult","axios","post","then","data","props","updateResult","className","htmlFor","id","rows","this","onChange","type","onClick","React","Component","Result","Object","keys","length","number","pizza","map","item","index","size","crust","toppings","topping","area","Navbar","to","ToppingData","toppingsStats","get","responseData","toppingsData","string","charAt","toUpperCase","slice","capitalizeFirstLetter","_id","count","App","exact","path","ToppingsStats","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e93c81b.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst parseString = require('xml2js').parseString;\r\n\r\nclass NewOrderForm extends React.Component {\r\n\r\n  state = {\r\n    order: \r\n`{order number=\"123\"}\r\n    {pizza number=\"1\"}\r\n        {size}large{\\\\size}\r\n        {crust}hand-tossed{\\\\crust}\r\n        {type}custom{\\\\type}\r\n        {toppings area=\"0\"}\r\n            {item}pepperoni{\\\\item}\r\n            {item}extra cheese{\\\\item}\r\n        {\\\\toppings}\r\n        {toppings area=\"1\"}\r\n            {item}sausage{\\\\item}\r\n        {\\\\toppings}\r\n        {toppings area=\"2\"}\r\n            {item}mushrooms{\\\\item}\r\n        {\\\\toppings}\r\n    {\\\\pizza}\r\n    {pizza number=\"2\"}\r\n        {size}medium{\\\\size}\r\n        {crust}deep dish{\\\\crust}\r\n        {type}pepperoni feast{\\\\type}\r\n    {\\\\pizza}\r\n{\\\\order}`\r\n  }\r\n\r\n  textareaChangeListener = (e) => {\r\n    this.setState({\r\n      order: e.target.value\r\n    });\r\n  }\r\n\r\n  convertToXml = (orderInPML) => {\r\n    let orderInXML = orderInPML.replace(/{\\\\/g, '</').replace(/{/g, '<').replace(/}/g, '>');\r\n  \r\n    return orderInXML;\r\n  }\r\n\r\n  convertToJSON = (orderInXML) => {\r\n    let orderInJSON = {};\r\n\r\n    parseString(orderInXML, (err, result) => {\r\n      orderInJSON = result;\r\n    })\r\n\r\n    return orderInJSON;\r\n  }\r\n\r\n  sendOrderAndDisplayResult = () => {\r\n    let orderInXML = this.convertToXml(this.state.order);\r\n    let orderInJSON = this.convertToJSON(orderInXML);\r\n\r\n    axios.post('https://rocky-hamlet-57204.herokuapp.com/api/orders', orderInJSON)\r\n      .then((data) => {\r\n        this.props.updateResult(data);\r\n      }); \r\n    \r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"new-order-container col-12 col-md-6\">\r\n        <h2>Send Your New Order Here</h2>\r\n        <hr />\r\n        <p>Enter the order in Pizza Markup Language (PML) below</p>\r\n        <div className=\"form-input-container\">\r\n            <label htmlFor=\"textarea-order-pml\">Order</label>\r\n            <textarea \r\n              id=\"textarea-order-pml\" \r\n              className=\"form-control\" \r\n              rows=\"15\"\r\n              value={this.state.order}\r\n              onChange={this.textareaChangeListener}></textarea>\r\n        </div>\r\n        <div className=\"btn-submit-order-pml\">\r\n            <button \r\n              type=\"button\" \r\n              className=\"btn btn-primary\"\r\n              onClick={this.sendOrderAndDisplayResult}>Submit</button>\r\n        </div>\r\n        <p>Note: If nothing appears after pressing the Submit button, ensure that the data's format is valid, \r\n        or try using a different order number.</p>\r\n      </div>    \r\n    );\r\n  }\r\n}\r\n\r\nexport default NewOrderForm;","import React from 'react';\r\nimport './../styles/custom.css';\r\n\r\nclass Result extends React.Component {\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"col-12 col-md-6\">\r\n        <h2>Result</h2> \r\n        <hr />\r\n        {Object.keys(this.props.result).length !== 0 ? \r\n          <div>\r\n            <p>Order {this.props.result.number}:</p>\r\n            <ul>\r\n            {\r\n              this.props.result.pizza.map((item, index) => {\r\n                return (\r\n                  <li key={index}>\r\n                    Pizza {item.number} - {item.size}, {item.crust}, {item.type}\r\n                    <ul>\r\n                    { \r\n                      item.toppings.map((topping, index) => {\r\n                        return (\r\n                          <li key={index}>Toppings{\" \"}\r\n                          {\r\n                            topping.area === '0' ? 'Whole:' :\r\n                            topping.area === '1' ? 'First-Half:' :\r\n                            topping.area === '2' ? 'Second-Half:' : null    \r\n                          }\r\n                            <ul>\r\n                              {topping.item.map((item, index) => {\r\n                                return <li key={index}>{item}</li>\r\n                              })}\r\n                            </ul>\r\n                          </li>)    \r\n                      })\r\n                    }\r\n                    </ul>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n            </ul>\r\n          </div>\r\n          :\r\n          <div>\r\n            Enter an order to get the result\r\n          </div> \r\n        }\r\n      </div>    \r\n    );\r\n  }\r\n}\r\n\r\nexport default Result;","import React from 'react';\r\nimport { Link, Route, Redirect } from 'react-router-dom';\r\n\r\nclass Navbar extends React.Component {\r\n\r\n  render(){\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"navbar-links\">\r\n                <Link to=\"/order\" className=\"nav-link text-dark\">Send New Order</Link>\r\n                <Link to=\"/order/toppings-stats\" className=\"nav-link text-dark\">Toppings Stats</Link>\r\n            </div>\r\n        </nav>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass ToppingData extends React.Component {\r\n\r\n  state = {\r\n    toppingsStats: {},\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get('https://rocky-hamlet-57204.herokuapp.com/api/orders/toppings-stats')\r\n      .then((responseData) => {\r\n        this.setState({\r\n          toppingsStats: responseData.data.data.toppingsData\r\n        })\r\n      })\r\n  }\r\n\r\n  capitalizeFirstLetter (string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"toppings-stats-container\">\r\n        <h2>Toppings Statistics</h2> \r\n        <hr />\r\n        <ul>\r\n          {Object.keys(this.state.toppingsStats).length !== 0 \r\n              && \r\n          this.state.toppingsStats.map(topping => {\r\n            return <li key={topping._id}>\r\n                    Topping Name: \r\n                    {\" \"}<span className=\"topping_name\">\r\n                      {this.capitalizeFirstLetter(topping._id)}\r\n                    </span> \r\n                    {\" \"}- Count: {topping.count}</li>\r\n          })}\r\n        </ul>\r\n      </div>   \r\n    );\r\n  }\r\n}\r\n\r\nexport default ToppingData;","import React from 'react';\nimport NewOrderForm from './components/NewOrderForm';\nimport Result from './components/Result';\nimport Navbar from './components/Navbar';\nimport ToppingsStats from './components/ToppingsStats';\nimport { Route, Redirect } from 'react-router-dom';\n\nclass App extends React.Component {\n  state = {\n    result: {}, \n  }\n\n  updateResult = (responseData) => {\n    this.setState({\n      result: responseData.data.data.order,\n    });\n  }\n\n  render(){\n    return (\n      <div>\n        <Navbar />\n\n        <Route exact path=\"/\">\n          <Redirect to=\"/order\" />\n        </Route>\n\n        <Route exact path=\"/order\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <NewOrderForm updateResult={this.updateResult}/>\n              <Result result={this.state.result}/>\n            </div>\n          </div>\n        </Route>\n\n        <Route exact path=\"/order/toppings-stats\">\n          <ToppingsStats />\n        </Route>\n\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}